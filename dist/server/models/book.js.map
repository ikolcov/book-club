{"version":3,"sources":["../../../src/server/models/book.js"],"names":["mongoose","require","BookSchema","Schema","id","type","String","unique","author","description","thumbnail","link","title","addedBy","Types","ObjectId","comments","authorId","by","date","Date","default","now","content","Book","model","addBook","book","save","getBooks","find","getBook","findOne","updateBook","findOneAndUpdate","$set","deleteBook","findOneAndRemove","addComment","user","name","email","_id","markModified","deleteComment","commentId","commentIndex","findIndex","comment","toString","splice","module","exports"],"mappings":";;;;;;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;AACA,IAAMC,aAAa,IAAIF,SAASG,MAAb,CAAoB;AACrCC,MAAI;AACFC,UAAMC,MADJ;AAEFC,YAAQ;AAFN,GADiC;AAKrCC,UAAQF,MAL6B;AAMrCG,eAAaH,MANwB;AAOrCI,aAAWJ,MAP0B;AAQrCK,QAAML,MAR+B;AASrCM,SAAON,MAT8B;AAUrCO,WAASb,SAASG,MAAT,CAAgBW,KAAhB,CAAsBC,QAVM;AAWrCC,YAAU,CACR;AACEC,cAAUjB,SAASG,MAAT,CAAgBW,KAAhB,CAAsBC,QADlC;AAEEG,QAAIZ,MAFN;AAGEa,UAAM;AACJd,YAAMe,IADF;AAEJC,eAASD,KAAKE;AAFV,KAHR;AAOEC,aAASjB;AAPX,GADQ;AAX2B,CAApB,CAAnB;;AAwBA,IAAMkB,OAAOxB,SAASyB,KAAT,CAAe,MAAf,EAAuBvB,UAAvB,CAAb;;AAEAsB,KAAKE,OAAL,GAAe,UAASC,IAAT,EAAe;AAC5B,SAAO,IAAI,IAAJ,CAASA,IAAT,EAAeC,IAAf,EAAP;AACD,CAFD;;AAIAJ,KAAKK,QAAL,GAAgB,YAAW;AACzB,SAAOL,KAAKM,IAAL,CAAU,EAAV,CAAP;AACD,CAFD;;AAIAN,KAAKO,OAAL,GAAe,UAAS3B,EAAT,EAAa;AAC1B,SAAOoB,KAAKQ,OAAL,CAAa,EAAE5B,MAAF,EAAb,CAAP;AACD,CAFD;;AAIAoB,KAAKS,UAAL,GAAkB,UAAS7B,EAAT,EAAauB,IAAb,EAAmB;AACnC,SAAOH,KAAKU,gBAAL,CAAsB,EAAE9B,MAAF,EAAtB,EAA8B,EAAE+B,MAAMR,IAAR,EAA9B,CAAP;AACD,CAFD;;AAIAH,KAAKY,UAAL,GAAkB,UAAShC,EAAT,EAAa;AAC7B,SAAOoB,KAAKa,gBAAL,CAAsB,EAAEjC,MAAF,EAAtB,CAAP;AACD,CAFD;;AAIAoB,KAAKc,UAAL;AAAA,uDAAkB,iBAAelC,EAAf,EAAmBmC,IAAnB,EAAyBhB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGC,KAAKO,OAAL,CAAa3B,EAAb,CADH;;AAAA;AACVuB,gBADU;AAEVT,cAFU,GAEFqB,KAAKC,IAFH,UAEYD,KAAKE,KAFjB;AAGVxB,oBAHU,GAGCsB,KAAKG,GAHN;;AAIhBf,iBAAKX,QAAL,gCAAoBW,KAAKX,QAAzB,IAAmC,EAAEC,kBAAF,EAAYC,MAAZ,EAAgBK,gBAAhB,EAAnC;AACAI,iBAAKgB,YAAL,CAAkB,UAAlB;AALgB,6CAMThB,KAAKC,IAAL,EANS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;;AASAJ,KAAKoB,aAAL;AAAA,wDAAqB,kBAAexC,EAAf,EAAmByC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACArB,KAAKO,OAAL,CAAa3B,EAAb,CADA;;AAAA;AACbuB,gBADa;AAEbmB,wBAFa,GAEEnB,KAAKX,QAAL,CAAc+B,SAAd,CAAwB;AAAA,qBAAWC,QAAQN,GAAR,CAAYO,QAAZ,OAA2BJ,SAAtC;AAAA,aAAxB,CAFF;;AAGnBlB,iBAAKX,QAAL,CAAckC,MAAd,CAAqBJ,YAArB,EAAmC,CAAnC;AACAnB,iBAAKgB,YAAL,CAAkB,UAAlB;AAJmB,8CAKZhB,KAAKC,IAAL,EALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;;AAQAuB,OAAOC,OAAP,GAAiB5B,IAAjB","file":"book.js","sourcesContent":["const mongoose = require('mongoose');\n\n// define the User model schema\nconst BookSchema = new mongoose.Schema({\n  id: {\n    type: String,\n    unique: true,\n  },\n  author: String,\n  description: String,\n  thumbnail: String,\n  link: String,\n  title: String,\n  addedBy: mongoose.Schema.Types.ObjectId,\n  comments: [\n    {\n      authorId: mongoose.Schema.Types.ObjectId,\n      by: String,\n      date: {\n        type: Date,\n        default: Date.now,\n      },\n      content: String,\n    },\n  ],\n});\n\nconst Book = mongoose.model('Book', BookSchema);\n\nBook.addBook = function(book) {\n  return new this(book).save();\n};\n\nBook.getBooks = function() {\n  return Book.find({});\n};\n\nBook.getBook = function(id) {\n  return Book.findOne({ id });\n};\n\nBook.updateBook = function(id, book) {\n  return Book.findOneAndUpdate({ id }, { $set: book });\n};\n\nBook.deleteBook = function(id) {\n  return Book.findOneAndRemove({ id });\n};\n\nBook.addComment = async function(id, user, content) {\n  const book = await Book.getBook(id);\n  const by = `${user.name} [${user.email}]`;\n  const authorId = user._id;\n  book.comments = [...book.comments, { authorId, by, content }];\n  book.markModified('comments');\n  return book.save();\n};\n\nBook.deleteComment = async function(id, commentId) {\n  const book = await Book.getBook(id);\n  const commentIndex = book.comments.findIndex(comment => comment._id.toString() === commentId);\n  book.comments.splice(commentIndex, 1);\n  book.markModified('comments');\n  return book.save();\n};\n\nmodule.exports = Book;\n"]}