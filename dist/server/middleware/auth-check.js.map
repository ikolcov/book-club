{"version":3,"sources":["../../../src/server/middleware/auth-check.js"],"names":["jwt","require","User","model","module","exports","ctx","next","headers","authorization","status","token","split","verify","process","env","JWT_SECRET","decoded","findById","sub","user","_id","toString","state"],"mappings":";;;;AAAA,IAAMA,MAAMC,QAAQ,cAAR,CAAZ;AACA,IAAMC,OAAOD,QAAQ,UAAR,EAAoBE,KAApB,CAA0B,MAA1B,CAAb;;AAEAC,OAAOC,OAAP;AAAA,uDAAiB,iBAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACVD,IAAIE,OAAJ,CAAYC,aADF;AAAA;AAAA;AAAA;;AAEbH,gBAAII,MAAJ,GAAa,GAAb;AAFa,6CAGN,KAHM;;AAAA;AAKf;AACMC,iBANS,GAMDL,IAAIE,OAAJ,CAAYC,aAAZ,CAA0BG,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CANC;AAAA;AAAA;AAAA,mBASSZ,IAAIa,MAAJ,CAAWF,KAAX,EAAkBG,QAAQC,GAAR,CAAYC,UAA9B,CATT;;AAAA;AASPC,mBATO;AAAA;AAAA,mBAUMf,KAAKgB,QAAL,CAAcD,QAAQE,GAAtB,CAVN;;AAAA;AAUPC,gBAVO;;AAAA,kBAYTA,KAAKC,GAAL,CAASC,QAAT,OAAwBL,QAAQE,GAZvB;AAAA;AAAA;AAAA;;AAaXb,gBAAIiB,KAAJ,CAAUH,IAAV,GAAiBA,IAAjB;AAbW,6CAcJb,MAdI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAiBbD,gBAAII,MAAJ,GAAa,GAAb;AAjBa,6CAkBN,KAlBM;;AAAA;AAAA,6CAoBR,KApBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"auth-check.js","sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('mongoose').model('User');\n\nmodule.exports = async (ctx, next) => {\n  if (!ctx.headers.authorization) {\n    ctx.status = 401;\n    return false;\n  }\n  // get the last part from a authorization header string like \"bearer token-value\"\n  const token = ctx.headers.authorization.split(' ')[1];\n\n  try {\n    const decoded = await jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.sub);\n    // eslint-disable-next-line no-underscore-dangle\n    if (user._id.toString() === decoded.sub) {\n      ctx.state.user = user;\n      return next();\n    }\n  } catch (e) {\n    ctx.status = 401;\n    return false;\n  }\n  return false;\n};\n"]}